(defn prompt [] (printf "[rbdev]=>"))
(clojure.main/repl :prompt prompt)
(defn prompt [] (printf "[rbdev] => "))
(clojure.main/repl :prompt prompt)
(load-file "roman_numerals_test.clj")
(zipmap "ATCG" (repeat 0))
(merge (zipmap "ATCG" (repeat 0)) {\G 12})
(load-file "roman_numerals_test.clj")
(roman-numerals/numerals 102)
(roman-numerals/numerals 12)
(roman-numerals/numerals 52)
(roman-numerals/numerals 1052)
(roman-numerals/numerals 1998)
(roman-numerals/numerals 1999)
(roman-numerals/numerals 2000)
(roman-numerals/numerals 2015)
(roman-numerals/numerals 2025)
(roman-numerals/numerals 202)
(roman-numerals/numerals 2002)
(load-file "roman_numerals_test.clj")
(def num "1234")
(def n "1234")
(iterate #(/ % 10) 1000)
(take 4 (iterate #(/ % 10) 1000))
(load-file "roman_numerals_test.clj")
(take (count n) (iterate #(* % 10) 1))
(load-file "roman_numerals_test.clj")
(conj 4 [1 2 3])
(conj [1 2 3] 4)
(cons 4 [1 2 3])
(load-file "roman_numerals_test.clj")
